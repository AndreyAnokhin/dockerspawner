language: python
env:
  global:
    - ASYNC_TEST_TIMEOUT=30

# request additional services for the jobs to access
services:
  - docker

before_install:
  - docker swarm init
  - nvm install 10; nvm use 10
  - npm install -g configurable-http-proxy
  - pip install --upgrade -r dev-requirements.txt jupyterhub==${JUPYTERHUB:-0}.*

install:
  - pip install -e .
  - pip freeze

script:
  - pyflakes dockerspawner
  - |
    # pre-pull images to avoid long wait times in tests
    for v in 1.0 1.2.0dev; do
      docker pull jupyterhub/singleuser:$v
      # preserve the layers with a different tag
      docker tag jupyterhub/singleuser:$v jupyterhub/singleuser:${v}-cache
      # untag so that pull actions are still required
      docker rmi jupyterhub/singleuser:$v
    done
  - |
    # run tests
    if [[ -z "$TEST" ]]; then
      travis_retry py.test --cov dockerspawner tests -v
    fi
  - |
    # run internal-ssl test with docker-compose
    if [[ "$TEST" = "internal-ssl" ]]; then
      cd examples/internal-ssl
      pytest -vsx
    fi

jobs:
  fast_finish: true
  include:
    # Default stage: test
    - name: internal-ssl test
      python: 3.6
      env: TEST=internal-ssl
    - name: python:3.5 + jupyterhub 1.0
      python: 3.5
      env: JUPYTERHUB=1.0
    - name: python:3.6 + jupyterhub 1.0
      python: 3.6
      env: JUPYTERHUB=1.0
    - name: python:3.7 + jupyterhub 1.2.0dev
      python: 3.7
      env: JUPYTERHUB=1.2.0dev
    - name: python:3.8 + jupyterhub 1.2.0dev
      python: 3.8
      env: JUPYTERHUB=1.2.0dev

    # Only deploy if all test jobs passed
    - stage: deploy
      python: 3.7
      if: tag IS present
      deploy:
        provider: pypi
        user: __token__
        # password: see secret PYPI_PASSWORD variable
        distributions: sdist bdist_wheel
        on:
          # Without this we get the note about:
          # Skipping a deployment with the pypi provider because this branch is not permitted: <tag>
          tags: true
  fast_finish: true
